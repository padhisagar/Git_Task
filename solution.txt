
User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task
$ git config --global user.name Sagar

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task
$ git config --global user.email sagarpadhi005@gmail.com

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task
$ git init
Initialized empty Git repository in C:/Users/User/Desktop/Git Task/.git/

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ touch index.html

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ touch aboutus.html

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ touch contactus.html

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        aboutus.html
        contactus.html
        index.html

nothing added to commit but untracked files present (use "git add" to track)

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ git add -A

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ git branch Dev
fatal: Not a valid object name: 'master'.

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ git branch

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ git branch -a


User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ git commit -m "First commit"
[master (root-commit) 1dd8db1] First commit
 3 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 aboutus.html
 create mode 100644 contactus.html
 create mode 100644 index.html

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ git branch Dev

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ git checkout Dev
Switched to branch 'Dev'

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (Dev)
$ git status
On branch Dev
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html

no changes added to commit (use "git add" and/or "git commit -a")

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (Dev)
$ git add index.html

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (Dev)
$ git commit -m "modified Index.html"
[Dev 2045a49] modified Index.html
 1 file changed, 14 insertions(+)

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (Dev)
$ git status
On branch Dev
nothing to commit, working tree clean

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (Dev)
$ git branch Test

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (Dev)
$ git checkout Test
Switched to branch 'Test'

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (Test)
$ git status
On branch Test
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   aboutus.html
        modified:   contactus.html

no changes added to commit (use "git add" and/or "git commit -a")

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (Test)
$ git add -a
error: unknown switch `a'
usage: git add [<options>] [--] <pathspec>...

    -n, --dry-run         dry run
    -v, --verbose         be verbose

    -i, --interactive     interactive picking
    -p, --patch           select hunks interactively
    -e, --edit            edit current diff and apply
    -f, --force           allow adding otherwise ignored files
    -u, --update          update tracked files
    --renormalize         renormalize EOL of tracked files (implies -u)
    -N, --intent-to-add   record only the fact that the path will be added later
    -A, --all             add changes from all tracked and untracked files
    --ignore-removal      ignore paths removed in the working tree (same as --no-all)
    --refresh             don't add, only refresh the index
    --ignore-errors       just skip files which cannot be added because of errors
    --ignore-missing      check if - even missing - files are ignored in dry run
    --chmod (+|-)x        override the executable bit of the listed files
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character


User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (Test)
$ git add -A

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (Test)
$ git status
On branch Test
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   aboutus.html
        modified:   contactus.html


User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (Test)
$ git commit -m "modified Two file"
[Test 324e16f] modified Two file
 2 files changed, 35 insertions(+)

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (Test)
$ git checkout Dev
Switched to branch 'Dev'

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (Dev)
$ ls
aboutus.html  contactus.html  index.html

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (Dev)
$ git status
On branch Dev
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html

no changes added to commit (use "git add" and/or "git commit -a")

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (Dev)
$ git diff
diff --git a/index.html b/index.html
index f2f0809..a9eebb6 100644
--- a/index.html
+++ b/index.html
@@ -8,7 +8,7 @@
 </head>
 <body>
     <div>
-        <h1>Welcome to git</h1>
+        <h1>Welcome to git The actually difference is its a source code management</h1>
     </div>
 </body>
 </html>
\ No newline at end of file

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (Dev)
$ git add index.html

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (Dev)
$ git commit -m "modified index.html"
[Dev c5742c7] modified index.html
 1 file changed, 1 insertion(+), 1 deletion(-)

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (Dev)
$ git checkout master
Switched to branch 'master'

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ git branch
  Dev
  Test
* master

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ git merge Dev Test
Fast-forwarding to: Dev
Trying simple merge with Test
Merge made by the 'octopus' strategy.
 aboutus.html   | 16 ++++++++++++++++
 contactus.html | 19 +++++++++++++++++++
 index.html     | 14 ++++++++++++++
 3 files changed, 49 insertions(+)

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ git status
On branch master
nothing to commit, working tree clean

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ touch .gitignore

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore

nothing added to commit but untracked files present (use "git add" to track)

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ git add -A

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   .gitignore


User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ git commit -m "Added git ignore file"
[master 78128c1] Added git ignore file
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 .gitignore

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ git remote add origine https://github.com/padhisagar/Git_Task.git

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ git push add master
fatal: 'add' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$ git push -u origine master
Enumerating objects: 17, done.
Counting objects: 100% (17/17), done.
Delta compression using up to 4 threads
Compressing objects: 100% (16/16), done.
Writing objects: 100% (17/17), 1.84 KiB | 627.00 KiB/s, done.
Total 17 (delta 8), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (8/8), done.
To https://github.com/padhisagar/Git_Task.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'origine'.

User@DESKTOP-VLG746S MINGW64 ~/Desktop/Git Task (master)
$


User@DESKTOP-VLG746S MINGW64 ~/Desktop/GitHub Task
$ cd git task
bash: cd: too many arguments

User@DESKTOP-VLG746S MINGW64 ~/Desktop/GitHub Task
$ cd git_task

User@DESKTOP-VLG746S MINGW64 ~/Desktop/GitHub Task/git_task (master)
$ git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

User@DESKTOP-VLG746S MINGW64 ~/Desktop/GitHub Task/git_task (master)
$ ls
aboutus.html  contactus.html  index.html  solution.txt

User@DESKTOP-VLG746S MINGW64 ~/Desktop/GitHub Task/git_task (master)
$ git push
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 2.25 KiB | 1.13 MiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/padhisagar/Git_Task.git
   78128c1..65fc792  master -> master

User@DESKTOP-VLG746S MINGW64 ~/Desktop/GitHub Task/git_task (master)
$

